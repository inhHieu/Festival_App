{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport useGetData from \"../Api/useGetData\";\nimport { API_BASE_URL } from \"../Api/BaseURL\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction NewsDetail(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    eventID = _route$params.eventID,\n    eventName = _route$params.eventName,\n    titleImg = _route$params.titleImg;\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    postText = _React$useState2[0],\n    setPostText = _React$useState2[1];\n  var _useGetData = useGetData(API_BASE_URL + \"/news/\" + eventID),\n    _useGetData2 = _slicedToArray(_useGetData, 3),\n    data = _useGetData2[0],\n    loading = _useGetData2[1],\n    error = _useGetData2[2];\n  if (!loading) return _jsxs(_StyledComponent, {\n    className: \"  \",\n    component: ScrollView,\n    children: [_jsx(_StyledComponent, {\n      className: \"w-full h-[250] rounded-b-[20] \",\n      source: {\n        uri: titleImg\n      },\n      component: Image\n    }), _jsx(_StyledComponent, {\n      className: \"text-2xl mt-[30] mb-[5] px-[30] \",\n      component: Text,\n      children: eventName\n    }), data[0].newsContent.split(\"[IMAGE]\").map(function (text, i) {\n      return _jsxs(_StyledComponent, {\n        className: \" px-[30] mb-[10] \",\n        component: View,\n        children: [_jsx(_StyledComponent, {\n          className: \" text-justify\",\n          component: Text,\n          children: text\n        }), i === 0 && _jsx(_StyledComponent, {\n          className: \"w-full aspect-video rounded-b-[20] rounded-t-[20] mb-[30] \",\n          source: {\n            uri: titleImg\n          },\n          component: Image\n        })]\n      }, i);\n    }), _jsx(_StyledComponent, {\n      className: \" px-[30] mb-[30] italic font-light  \",\n      component: Text,\n      children: data[0].postedDate\n    }), _jsx(_StyledComponent, {\n      className: \" bg-green-500 w-full h-[300] \",\n      component: View\n    }), _jsx(Button, {\n      title: \"log\",\n      onPress: function onPress() {\n        console.log(titleImg);\n      }\n    })]\n  });\n}\nexport default NewsDetail;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"mb-[10]\": {\n      \"marginBottom\": 10\n    },\n    \"mb-[30]\": {\n      \"marginBottom\": 30\n    },\n    \"mb-[5]\": {\n      \"marginBottom\": 5\n    },\n    \"mt-[30]\": {\n      \"marginTop\": 30\n    },\n    \"aspect-video\": {\n      \"aspectRatio\": 1.777777778\n    },\n    \"h-[250]\": {\n      \"height\": 250\n    },\n    \"h-[300]\": {\n      \"height\": 300\n    },\n    \"w-full\": {\n      \"width\": \"100%\"\n    },\n    \"rounded-b-[20]\": {\n      \"borderBottomRightRadius\": 20,\n      \"borderBottomLeftRadius\": 20\n    },\n    \"rounded-t-[20]\": {\n      \"borderTopLeftRadius\": 20,\n      \"borderTopRightRadius\": 20\n    },\n    \"bg-green-500\": {\n      \"backgroundColor\": \"#22c55e\"\n    },\n    \"px-[30]\": {\n      \"paddingLeft\": 30,\n      \"paddingRight\": 30\n    },\n    \"text-justify\": {\n      \"textAlign\": \"justify\"\n    },\n    \"font-light\": {\n      \"fontWeight\": \"300\"\n    },\n    \"italic\": {\n      \"fontStyle\": \"italic\"\n    },\n    \"text-2xl\": {\n      \"fontSize\": 20\n    }\n  }\n});","map":{"version":3,"names":["React","ScrollView","Button","Text","View","Image","useGetData","API_BASE_URL","jsx","_jsx","jsxs","_jsxs","NewsDetail","_ref","route","_route$params","params","eventID","eventName","titleImg","_React$useState","useState","_React$useState2","_slicedToArray","postText","setPostText","_useGetData","_useGetData2","data","loading","error","_StyledComponent","className","component","children","source","uri","newsContent","split","map","text","i","postedDate","title","onPress","console","log","_NativeWindStyleSheet","create","styles"],"sources":["D:/Learning/ReactNative/Festival/src/Pages/NewsDetail.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { ScrollView, Button, Text, View, Image } from \"react-native\";\r\nimport useGetData from \"../Api/useGetData\";\r\nimport { API_BASE_URL } from \"../Api/BaseURL\";\r\n\r\nfunction NewsDetail({ route }) {\r\n  const { eventID, eventName, titleImg } = route.params;\r\n  const [postText, setPostText] = React.useState(\"\");\r\n  const [data, loading, error] = useGetData(`${API_BASE_URL}/news/${eventID}`);\r\n  if (!loading)\r\n    return (\r\n      <ScrollView className=\"  \">\r\n        <Image\r\n          className=\"w-full h-[250] rounded-b-[20] \"\r\n          source={{ uri: titleImg }}\r\n        />\r\n        <Text className=\"text-2xl mt-[30] mb-[5] px-[30] \">{eventName}</Text>\r\n        {data[0].newsContent.split(\"[IMAGE]\").map((text, i) => (\r\n          <View className=\" px-[30] mb-[10] \" key={i}>\r\n            <Text className=\" text-justify\">{text}</Text>\r\n            {i === 0 && (\r\n              <Image\r\n                className=\"w-full aspect-video rounded-b-[20] rounded-t-[20] mb-[30] \"\r\n                source={{ uri: titleImg }}\r\n              />\r\n            )}\r\n          </View>\r\n        ))}\r\n        <Text className=\" px-[30] mb-[30] italic font-light  \">\r\n          {data[0].postedDate}\r\n        </Text>\r\n        <View className=\" bg-green-500 w-full h-[300] \"></View>\r\n        <Button\r\n          title=\"log\"\r\n          onPress={() => {\r\n            console.log(titleImg);\r\n          }}\r\n        ></Button>\r\n      </ScrollView>\r\n    );\r\n}\r\n\r\nexport default NewsDetail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}