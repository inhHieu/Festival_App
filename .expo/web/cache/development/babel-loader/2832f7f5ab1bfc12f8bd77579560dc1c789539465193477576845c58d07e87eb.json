{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport axios from \"axios\";\nimport EventsDetail from \"./EventsDetail\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction Events() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"EventsScreen\",\n      component: EventsScreen,\n      options: {\n        title: \"Events\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EventsDetail\",\n      component: EventsDetail,\n      options: {\n        title: \"Event Details\"\n      }\n    })]\n  });\n}\nfunction EventsScreen(_ref) {\n  var _route$params;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    events = _useState2[0],\n    setEvents = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var getEvents = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var request = yield axios.get('http://localhost:8008/api/categories?offset=0&limit=10000');\n        setEvents(request.data);\n        console.log(request.data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    });\n    return function getEvents() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getEvents();\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Text, {\n      style: {\n        margin: 10\n      },\n      children: [\"Post: \", (_route$params = route.params) == null ? void 0 : _route$params.post]\n    }), _jsx(Button, {\n      title: \"Event\",\n      onPress: function onPress() {\n        navigation.navigate(\"EventsDetail\", {\n          eventID: 86,\n          eventName: \"Drone light show\"\n        });\n      }\n    })]\n  });\n}\nexport default Events;","map":{"version":3,"names":["useEffect","useState","Button","StyleSheet","Text","View","NavigationContainer","createNativeStackNavigator","axios","EventsDetail","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Events","Navigator","screenOptions","headerShown","children","Screen","name","component","EventsScreen","options","title","_ref","_route$params","navigation","route","_useState","_useState2","_slicedToArray","events","setEvents","_useState3","_useState4","loading","setLoading","getEvents","_ref2","_asyncToGenerator","request","get","data","console","log","error","message","apply","arguments","style","margin","params","post","onPress","navigate","eventID","eventName"],"sources":["D:/Learning/ReactNative/Festival/Pages/Events.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Button, StyleSheet, Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport axios from \"axios\";\r\n\r\nimport EventsDetail from \"./EventsDetail\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction Events() {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen\r\n        name=\"EventsScreen\"\r\n        component={EventsScreen}\r\n        options={{ title: \"Events\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"EventsDetail\"\r\n        component={EventsDetail}\r\n        options={{ title: \"Event Details\" }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction EventsScreen({ navigation, route }) {\r\n  const [events, setEvents] = useState();\r\n  const [loading, setLoading] = useState();\r\n\r\n  const getEvents = async () => {\r\n    try {\r\n      const request = await axios.get(\r\n        'http://localhost:8008/api/categories?offset=0&limit=10000'\r\n      )\r\n      setEvents(request.data)\r\n      console.log(request.data)\r\n    } catch(error) {\r\n      console.log(error.message)\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getEvents();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (route.params?.post) {\r\n  //     // Post updated, do something with `route.params.post`\r\n  //     // For example, send the post to the server\r\n  //   }\r\n  // }, [route.params?.post]);\r\n\r\n  return (\r\n    <>\r\n      <Text style={{ margin: 10 }}>Post: {route.params?.post}</Text>\r\n      <Button\r\n        title=\"Event\"\r\n        onPress={() => {\r\n          navigation.navigate(\"EventsDetail\", {\r\n            eventID: 86,\r\n            eventName: \"Drone light show\",\r\n          });\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Events;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,YAAY;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,IAAMC,KAAK,GAAGT,0BAA0B,CAAC,CAAC;AAE1C,SAASU,MAAMA,CAAA,EAAG;EAChB,OACEJ,KAAA,CAACG,KAAK,CAACE,SAAS;IAACC,aAAa,EAAE;MAAEC,WAAW,EAAE;IAAM,CAAE;IAAAC,QAAA,GACrDV,IAAA,CAACK,KAAK,CAACM,MAAM;MACXC,IAAI,EAAC,cAAc;MACnBC,SAAS,EAAEC,YAAa;MACxBC,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAS;IAAE,CAC9B,CAAC,EACFhB,IAAA,CAACK,KAAK,CAACM,MAAM;MACXC,IAAI,EAAC,cAAc;MACnBC,SAAS,EAAEf,YAAa;MACxBiB,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAgB;IAAE,CACrC,CAAC;EAAA,CACa,CAAC;AAEtB;AAEA,SAASF,YAAYA,CAAAG,IAAA,EAAwB;EAAA,IAAAC,aAAA;EAAA,IAArBC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;EACvC,IAAAC,SAAA,GAA4B/B,QAAQ,CAAC,CAAC;IAAAgC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAA8BpC,QAAQ,CAAC,CAAC;IAAAqC,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1B,IAAMG,SAAS;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC5B,IAAI;QACF,IAAMC,OAAO,SAASpC,KAAK,CAACqC,GAAG,CAC7B,2DACF,CAAC;QACDT,SAAS,CAACQ,OAAO,CAACE,IAAI,CAAC;QACvBC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAMG,KAAK,EAAE;QACbF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC;MAC5B;IACF,CAAC;IAAA,gBAVKT,SAASA,CAAA;MAAA,OAAAC,KAAA,CAAAS,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUd;EACDpD,SAAS,CAAC,YAAM;IACdyC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EASN,OACE5B,KAAA,CAAAE,SAAA;IAAAM,QAAA,GACER,KAAA,CAACT,IAAI;MAACiD,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAE;MAAAjC,QAAA,GAAC,QAAM,GAAAQ,aAAA,GAACE,KAAK,CAACwB,MAAM,qBAAZ1B,aAAA,CAAc2B,IAAI;IAAA,CAAO,CAAC,EAC9D7C,IAAA,CAACT,MAAM;MACLyB,KAAK,EAAC,OAAO;MACb8B,OAAO,EAAE,SAAAA,QAAA,EAAM;QACb3B,UAAU,CAAC4B,QAAQ,CAAC,cAAc,EAAE;UAClCC,OAAO,EAAE,EAAE;UACXC,SAAS,EAAE;QACb,CAAC,CAAC;MACJ;IAAE,CACH,CAAC;EAAA,CACF,CAAC;AAEP;AAEA,eAAe3C,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}