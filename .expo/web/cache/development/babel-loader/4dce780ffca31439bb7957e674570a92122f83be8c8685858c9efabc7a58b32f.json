{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { createStackNavigator, TransitionPresets } from \"@react-navigation/stack\";\nimport NewsList from \"../Component/NewsList\";\nimport NewsDetail from \"./NewsDetail\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nfunction News() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: _objectSpread({\n      headerShown: false\n    }, TransitionPresets.SlideFromRightIOS),\n    initialRouteName: \"NewsScreen\",\n    children: [_jsx(Stack.Screen, {\n      name: \"NewsScreen\",\n      component: NewsScreen\n    }), _jsx(Stack.Screen, {\n      name: \"NewsDetail\",\n      component: NewsDetail\n    })]\n  });\n}\nfunction NewsScreen(_ref) {\n  var _route$params$post, _route$params;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(6),\n    _useState2 = _slicedToArray(_useState, 2),\n    limit = _useState2[0],\n    setLimit = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    offset = _useState4[0],\n    setOffset = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var handleScroll = function handleScroll(event) {\n    var _event$nativeEvent = event.nativeEvent,\n      contentOffset = _event$nativeEvent.contentOffset,\n      layoutMeasurement = _event$nativeEvent.layoutMeasurement,\n      contentSize = _event$nativeEvent.contentSize;\n    var isEndReached = contentOffset.y + layoutMeasurement.height >= contentSize.height;\n    if (isEndReached && !isLoading) {\n      setIsLoading(true);\n      setOffset(function (prevOffset) {\n        return prevOffset + limit;\n      });\n    }\n  };\n  var handleContentSizeChange = function handleContentSizeChange(contentWidth, contentHeight) {\n    setIsLoading(false);\n  };\n  return _jsx(_StyledComponent, {\n    className: \"flex-1\",\n    component: View,\n    children: _jsxs(_StyledComponent, {\n      className: \" flex-1 justify-center items-center \",\n      component: View,\n      children: [_jsxs(_StyledComponent, {\n        colors: [\"#0ea5e9\", \"#14b8a6\"],\n        start: {\n          x: 0.3,\n          y: 0\n        },\n        end: {\n          x: 1,\n          y: 1\n        },\n        className: \"bg-sea-blue w-full h-[80] flex flex-row justify-between items-end p-[20] \",\n        component: LinearGradient,\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 20\n          },\n          children: (_route$params$post = (_route$params = route.params) == null ? void 0 : _route$params.post) != null ? _route$params$post : \"Latest News\"\n        }), _jsx(TouchableOpacity, {\n          title: \"srot\",\n          children: _jsx(Ionicons, {\n            name: \"md-filter\",\n            size: 24,\n            color: \"black\"\n          })\n        })]\n      }), _jsxs(_StyledComponent, {\n        className: \"flex-1 w-full pt-[20] \",\n        onScroll: handleScroll,\n        onContentSizeChange: handleContentSizeChange,\n        component: ScrollView,\n        children: [_jsx(NewsList, {\n          limit: limit,\n          offset: offset,\n          navigation: navigation,\n          route: route\n        }), _jsx(_StyledComponent, {\n          className: \"w-full h-[20] \",\n          component: View\n        }), isLoading && _jsx(Text, {\n          children: \"Loading...\"\n        })]\n      })]\n    })\n  });\n}\nexport default News;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"h-[20]\": {\n      \"height\": 20\n    },\n    \"h-[80]\": {\n      \"height\": 80\n    },\n    \"w-full\": {\n      \"width\": \"100%\"\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"items-end\": {\n      \"alignItems\": \"flex-end\"\n    },\n    \"items-center\": {\n      \"alignItems\": \"center\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"justify-between\": {\n      \"justifyContent\": \"space-between\"\n    },\n    \"bg-sea-blue\": {\n      \"backgroundColor\": \"#2bb7e1\"\n    },\n    \"p-[20]\": {\n      \"paddingTop\": 20,\n      \"paddingRight\": 20,\n      \"paddingBottom\": 20,\n      \"paddingLeft\": 20\n    },\n    \"pt-[20]\": {\n      \"paddingTop\": 20\n    }\n  }\n});","map":{"version":3,"names":["React","useState","Button","ScrollView","Text","View","TouchableOpacity","Ionicons","LinearGradient","createStackNavigator","TransitionPresets","NewsList","NewsDetail","jsx","_jsx","jsxs","_jsxs","Stack","News","Navigator","screenOptions","_objectSpread","headerShown","SlideFromRightIOS","initialRouteName","children","Screen","name","component","NewsScreen","_ref","_route$params$post","_route$params","navigation","route","_useState","_useState2","_slicedToArray","limit","setLimit","_useState3","_useState4","offset","setOffset","_useState5","_useState6","isLoading","setIsLoading","handleScroll","event","_event$nativeEvent","nativeEvent","contentOffset","layoutMeasurement","contentSize","isEndReached","y","height","prevOffset","handleContentSizeChange","contentWidth","contentHeight","_StyledComponent","className","colors","start","x","end","style","fontSize","params","post","title","size","color","onScroll","onContentSizeChange","_NativeWindStyleSheet","create","styles"],"sources":["D:/Learning/ReactNative/Festival/src/Pages/News.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, ScrollView, Text, View, TouchableOpacity } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport {\r\n  createStackNavigator,\r\n  TransitionPresets,\r\n} from \"@react-navigation/stack\";\r\n\r\nimport NewsList from \"../Component/NewsList\";\r\nimport NewsDetail from \"./NewsDetail\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction News() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        ...TransitionPresets.SlideFromRightIOS,\r\n      }}\r\n      initialRouteName=\"NewsScreen\"\r\n    >\r\n      <Stack.Screen\r\n        name=\"NewsScreen\"\r\n        component={NewsScreen}\r\n      />\r\n      <Stack.Screen\r\n        name=\"NewsDetail\"\r\n        component={NewsDetail}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction NewsScreen({ navigation, route }) {\r\n  const [limit, setLimit] = useState(6);\r\n  const [offset, setOffset] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleScroll = (event) => {\r\n    const { contentOffset, layoutMeasurement, contentSize } = event.nativeEvent;\r\n    const isEndReached =\r\n      contentOffset.y + layoutMeasurement.height >= contentSize.height;\r\n    if (isEndReached && !isLoading) {\r\n      setIsLoading(true);\r\n      setOffset((prevOffset) => prevOffset + limit);\r\n    }\r\n  };\r\n\r\n  const handleContentSizeChange = (contentWidth, contentHeight) => {\r\n    setIsLoading(false);\r\n  };\r\n  return (\r\n    <View className=\"flex-1\">\r\n      <View className=\" flex-1 justify-center items-center \">\r\n        {/* custom header */}\r\n        <LinearGradient\r\n          colors={[\"#0ea5e9\", \"#14b8a6\"]}\r\n          start={{ x: 0.3, y: 0 }}\r\n          end={{ x: 1, y: 1 }}\r\n          className=\"bg-sea-blue w-full h-[80] flex flex-row justify-between items-end p-[20] \"\r\n        >\r\n          <Text style={{ fontSize: 20 }}>\r\n            {route.params?.post ?? \"Latest News\"}\r\n          </Text>\r\n          <TouchableOpacity title=\"srot\">\r\n            <Ionicons name=\"md-filter\" size={24} color=\"black\" />\r\n          </TouchableOpacity>\r\n        </LinearGradient>\r\n        <ScrollView\r\n          className=\"flex-1 w-full pt-[20] \"\r\n          onScroll={handleScroll}\r\n          onContentSizeChange={handleContentSizeChange}\r\n        >\r\n          <NewsList\r\n            limit={limit}\r\n            offset={offset}\r\n            navigation={navigation}\r\n            route={route}\r\n          />\r\n          <View className=\"w-full h-[20] \"></View>\r\n          {isLoading && <Text>Loading...</Text>}\r\n        </ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default News;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}