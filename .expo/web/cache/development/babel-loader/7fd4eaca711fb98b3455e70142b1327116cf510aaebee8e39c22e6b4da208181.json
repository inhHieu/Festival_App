{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport axios from \"axios\";\nimport EventsDetail from \"./EventsDetail\";\nimport { API_BASE_URL } from \"../Api/BaseURL\";\nimport useGetData from \"../Api/useGetData\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction Events() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"EventsScreen\",\n      component: EventsScreen,\n      options: {\n        title: \"Events\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EventsDetail\",\n      component: EventsDetail,\n      options: {\n        title: \"Event Details\"\n      }\n    })]\n  });\n}\nfunction EventCard(_ref) {\n  var event = _ref.event;\n  return _jsxs(View, {\n    style: styles.card,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: event.name\n    }), _jsx(Text, {\n      style: styles.text,\n      children: event.dateStart\n    }), _jsx(Text, {\n      style: styles.text,\n      children: event.takePlace\n    }), _jsx(Text, {\n      style: styles.text,\n      children: event.eventDescription\n    })]\n  });\n}\nfunction EventsScreen(_ref2) {\n  var _route$params;\n  var navigation = _ref2.navigation,\n    route = _ref2.route;\n  var _useGetData = useGetData(API_BASE_URL + \"/events?offset=0&limit=3\"),\n    _useGetData2 = _slicedToArray(_useGetData, 3),\n    data = _useGetData2[0],\n    loading = _useGetData2[1],\n    error = _useGetData2[2];\n  if (!loading) {\n    console.log('got data', data);\n  }\n  return _jsxs(_Fragment, {\n    children: [data.map(function (event) {\n      return _jsx(EventCard, {\n        event: event\n      }, event.eventId);\n    }), _jsxs(Text, {\n      style: {\n        margin: 10\n      },\n      children: [\"Post: \", (_route$params = route.params) == null ? void 0 : _route$params.post]\n    }), _jsx(Button, {\n      title: \"Event\",\n      onPress: function onPress() {\n        navigation.navigate(\"EventsDetail\", {\n          eventID: 86,\n          eventName: \"Drone light show\"\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  card: {\n    backgroundColor: \"white\",\n    padding: 16,\n    borderRadius: 8,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 4,\n    shadowColor: \"#000\",\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 8\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 4\n  }\n});\nexport default Events;","map":{"version":3,"names":["useEffect","useState","Button","StyleSheet","Text","View","NavigationContainer","createNativeStackNavigator","axios","EventsDetail","API_BASE_URL","useGetData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Events","Navigator","screenOptions","headerShown","children","Screen","name","component","EventsScreen","options","title","EventCard","_ref","event","style","styles","card","text","dateStart","takePlace","eventDescription","_ref2","_route$params","navigation","route","_useGetData","_useGetData2","_slicedToArray","data","loading","error","console","log","map","eventId","margin","params","post","onPress","navigate","eventID","eventName","create","container","flex","alignItems","justifyContent","backgroundColor","padding","borderRadius","marginVertical","marginHorizontal","elevation","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height","fontSize","fontWeight","marginBottom"],"sources":["D:/Learning/ReactNative/Festival/Pages/Events.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Button, StyleSheet, Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport axios from \"axios\";\r\n\r\nimport EventsDetail from \"./EventsDetail\";\r\nimport {API_BASE_URL} from \"../Api/BaseURL\"\r\nimport useGetData from \"../Api/useGetData\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction Events() {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen\r\n        name=\"EventsScreen\"\r\n        component={EventsScreen}\r\n        options={{ title: \"Events\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"EventsDetail\"\r\n        component={EventsDetail}\r\n        options={{ title: \"Event Details\" }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\nfunction EventCard({ event }) {\r\n  return (\r\n    <View style={styles.card}>\r\n      <Text style={styles.title}>{event.name}</Text>\r\n      <Text style={styles.text}>{event.dateStart}</Text>\r\n      <Text style={styles.text}>{event.takePlace}</Text>\r\n      <Text style={styles.text}>{event.eventDescription}</Text>\r\n      {/* Add any additional event fields here */}\r\n    </View>\r\n  );\r\n}\r\nfunction EventsScreen({ navigation, route }) {\r\n  \r\n  // ? API requests\r\n  const [data, loading, error] = useGetData(\r\n    `${API_BASE_URL}/events?offset=0&limit=3`\r\n  );\r\n  if(!loading){\r\n    console.log('got data',data)\r\n  }\r\n  \r\n  // ? decor\r\n  // useEffect(() => {\r\n  //   if (route.params?.post) {\r\n  //     // Post updated, do something with `route.params.post`\r\n  //     // For example, send the post to the server\r\n  //   }\r\n  // }, [route.params?.post]);\r\n\r\n  return (\r\n    <>\r\n    {data.map((event) => (\r\n        <EventCard key={event.eventId} event={event} />\r\n      ))}\r\n      <Text style={{ margin: 10 }}>Post: {route.params?.post}</Text>\r\n      <Button\r\n        title=\"Event\"\r\n        onPress={() => {\r\n          navigation.navigate(\"EventsDetail\", {\r\n            eventID: 86,\r\n            eventName: \"Drone light show\",\r\n          });\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"white\",\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n    elevation: 4,\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 8,\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    marginBottom: 4,\r\n  },\r\n});\r\n\r\nexport default Events;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}