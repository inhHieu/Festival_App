{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport EventCard from \"../Component/EventCard\";\nimport { API_BASE_URL } from \"../Api/BaseURL\";\nimport useGetData from \"../Api/useGetData\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EventsScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useGetData = useGetData(API_BASE_URL + \"/events?offset=0&limit=3\"),\n    _useGetData2 = _slicedToArray(_useGetData, 3),\n    data = _useGetData2[0],\n    loading = _useGetData2[1],\n    error = _useGetData2[2];\n  if (loading) {\n    return _jsx(Text, {\n      children: \"Loading...\"\n    });\n  }\n  var test = function test() {\n    console.log(\"testing\");\n  };\n  return _jsxs(_StyledComponent, {\n    className: \"flex-1\",\n    component: View,\n    children: [_jsxs(_StyledComponent, {\n      colors: [\"#14b8a6\", \"#0ea5e9\"],\n      start: {\n        x: 0.3,\n        y: 0\n      },\n      end: {\n        x: 1,\n        y: 1\n      },\n      className: \"bg-sea-blue w-full h-[80] flex flex-row justify-between items-end p-[20] \",\n      component: LinearGradient,\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20\n        },\n        children: \"Events\"\n      }), _jsx(TouchableOpacity, {\n        title: \"srot\",\n        children: _jsx(Ionicons, {\n          name: \"md-filter\",\n          size: 24,\n          color: \"black\"\n        })\n      })]\n    }), _jsxs(_StyledComponent, {\n      className: \" px-[30] pt-[30]  \",\n      component: ScrollView,\n      children: [data.map(function (event) {\n        return _jsx(EventCard, {\n          event: event,\n          navigation: navigation,\n          route: route\n        }, event.eventId);\n      }), _jsx(_StyledComponent, {\n        className: \"w-full h-[30] \",\n        component: View\n      })]\n    }), _jsx(Button, {\n      title: \"Event\",\n      onPress: function onPress() {\n        navigation.navigate(\"EventsDetail\", {\n          eventID: 86,\n          eventName: \"Drone light show\"\n        });\n      }\n    }), _jsx(Button, {\n      title: \"test\",\n      onPress: test\n    })]\n  });\n}\nexport default EventsScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"h-[30]\": {\n      \"height\": 30\n    },\n    \"h-[80]\": {\n      \"height\": 80\n    },\n    \"w-full\": {\n      \"width\": \"100%\"\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"items-end\": {\n      \"alignItems\": \"flex-end\"\n    },\n    \"justify-between\": {\n      \"justifyContent\": \"space-between\"\n    },\n    \"bg-sea-blue\": {\n      \"backgroundColor\": \"#2bb7e1\"\n    },\n    \"p-[20]\": {\n      \"paddingTop\": 20,\n      \"paddingRight\": 20,\n      \"paddingBottom\": 20,\n      \"paddingLeft\": 20\n    },\n    \"px-[30]\": {\n      \"paddingLeft\": 30,\n      \"paddingRight\": 30\n    },\n    \"pt-[30]\": {\n      \"paddingTop\": 30\n    }\n  }\n});","map":{"version":3,"names":["React","ScrollView","Button","StyleSheet","Text","View","TouchableOpacity","Image","NavigationContainer","LinearGradient","Ionicons","EventCard","API_BASE_URL","useGetData","jsx","_jsx","jsxs","_jsxs","EventsScreen","_ref","navigation","route","_useGetData","_useGetData2","_slicedToArray","data","loading","error","children","test","console","log","_StyledComponent","className","component","colors","start","x","y","end","style","fontSize","title","name","size","color","map","event","eventId","onPress","navigate","eventID","eventName","_NativeWindStyleSheet","create","styles"],"sources":["D:/Learning/ReactNative/Festival/src/Component/EventsScreen.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  ScrollView,\r\n  Button,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Image,\r\n} from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\n\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nimport EventCard from \"../Component/EventCard\";\r\nimport { API_BASE_URL } from \"../Api/BaseURL\";\r\nimport useGetData from \"../Api/useGetData\";\r\n\r\nfunction EventsScreen({ navigation, route }) {\r\n  // ? API requests\r\n  const [data, loading, error] = useGetData(\r\n    `${API_BASE_URL}/events?offset=0&limit=3`\r\n  );\r\n  if (loading) {\r\n    return <Text>Loading...</Text>;\r\n  }\r\n\r\n  // if (error) {\r\n  //   return <Text>Error: {error}</Text>;\r\n  // }\r\n\r\n  // ? decor\r\n  // useEffect(() => {\r\n  //   if (route.params?.post) {\r\n  //     // Post updated, do something with `route.params.post`\r\n  //     // For example, send the post to the server\r\n  //   }\r\n  // }, [route.params?.post]);\r\n  const test = () => {\r\n    console.log(\"testing\");\r\n  };\r\n  return (\r\n    <View className=\"flex-1\">\r\n      <LinearGradient\r\n        colors={[\"#14b8a6\", \"#0ea5e9\"]}\r\n        start={{ x: 0.3, y: 0 }}\r\n        end={{ x: 1, y: 1 }}\r\n        className=\"bg-sea-blue w-full h-[80] flex flex-row justify-between items-end p-[20] \"\r\n      >\r\n        <Text style={{ fontSize: 20 }}>Events</Text>\r\n        <TouchableOpacity title=\"srot\">\r\n          <Ionicons name=\"md-filter\" size={24} color=\"black\" />\r\n        </TouchableOpacity>\r\n      </LinearGradient>\r\n      <ScrollView className=\" px-[30] pt-[30]  \">\r\n        {data.map((event) => (\r\n          <EventCard\r\n            key={event.eventId}\r\n            event={event}\r\n            navigation={navigation}\r\n            route={route} \r\n          />\r\n        ))}\r\n        <View className=\"w-full h-[30] \"></View>\r\n      </ScrollView>\r\n      {/* <Text style={{ margin: 10 }}>Poasdst: {route.params?.post}</Text> */}\r\n      <Button\r\n        title=\"Event\"\r\n        onPress={() => {\r\n          navigation.navigate(\"EventsDetail\", {\r\n            eventID: 86,\r\n            eventName: \"Drone light show\",\r\n          });\r\n        }}\r\n      />\r\n      <Button title=\"test\" onPress={test} />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default EventsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}